polyr:=proc(roots::seq(rational))
local r,p,d,two;
p:=1;d:=1;
for r in roots do
	two:=op(r);
	if numelems([two])=2 then
		d:=d,two[2];
	end;	
	p:=p*(x-r);
end;
lcm(d)*expand(p);	
end:

zr:=proc(p)
local q,n;
q:=p;n:=0;
while coeff(q,x,0)=0 do
	n:=n+1;
	q:=simplify(q/x);
end;
n,q
end:

candr:=proc(p)
	local a,b,c,ax,bx;	
	a:=coeff(p,x,0);		
	a:=NumberTheory[Divisors](a);
	a:=op(a);
	b:=coeff(p,x,degree(p));	
	b:=NumberTheory[Divisors](b);
	b:=op(b);
	c:={};
	for ax in a do
		for bx in b do
			c:=c union {ax/bx};
		end
	end;	
	c:=op(sort([op(c)]));
	c,-c;	
end:
